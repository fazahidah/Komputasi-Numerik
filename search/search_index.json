{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Integrasi Numerik \u00b6 Pengertian \u00b6 Integrasi Numerik merupakan Integral suatu fungsi dimana operator matematikanya dipresentasikan dalam bentuk sebagai berikut: i=\\int ^{b}_{a}f\\left( x\\right) dx Dimana i merupakan Integral suatu fungsi f (x) terhadap variabel x dengan batas-batas integrasi dari x = a sampai x = b. Integral adalah operasi matematika berupa kebalikan/invers dari operasi turunan dan limit dari jumlah atau suatu luas daerah tertentu. Integra dikategorikan menjadi 2 macam. Yaitu integral tak tentu dan integral tentu. Integral Tak Tentu \u00b6 Integral tak tentu adalah invers/kebalikan dari turunan atau biasa disebut anti turunan. Hasil integral tak tentu ini berupa fungsi baru yang belum mempunyai nilai tentu atau pasti, karena masih terdapat variabel dalam fungsi baru tersebut. \\int xdx=\\dfrac{x^{2}}{2}+c Integral Tentu \u00b6 Disebut integral tentu jika limit dari jumlah atau suatu luas daerah dilingkupi oleh kurva suatu persamaan tertentu. Integral tentu memiliki nilai tetap atau pasti, karena batas yang ditentukan sudah jelas. \\int ^{1}_{0}xdx= \\dfrac{x^{2}}{2}| _{0}^{1}=\\dfrac{1}{2} Metode Trapezoid \u00b6 Dalam metode trapezoid terdapat aturan trapezoid yang merupakan suatu metode pendekatan integrasi numerik dengan polinomial orde satu. Dalam metode ini, kurva melengkung dibuat mendekati dengan garis lurus sedemikian hingga, bentuk dibawah kurvanya menjadi seperti trapesium. \\int ^{b}_{a}f\\left( x\\right) dx\\approx \\int ^{b}_{a}\\left( a_{0}+a_{1}x\\right) dx Algoritma Trapezoid \u00b6 Definisikan nilai y = f(x) Menentukan batas bawahnya (x0) dan batas atasnya (xn). Tentukan jumlah pembagi (n) Hitung h = (xn - x0) / n Hitung integrasi = f(x0) + f(xn) for i=1 : n Hitung k = x0 + i*h Hitung integrasi = integrasi + 2 * f(k) Implementasi Python \u00b6 Trapezoid Code import numpy as np import matplotlib.pyplot as plt def func ( x ): return ( x ** 2 ) * np . exp ( - x ) a = 2.0 b = 10.0 n = 30 dx = ( b - a ) / ( n - 1 ) x = np . linspace ( a , b , n ) sum = 0.0 for i in range ( 1 , n - 1 ): sum += func ( x [ i ]) hasil = 0.5 * dx * ( func ( x [ 0 ]) + 2.0 * sum + func ( x [ - 1 ])) print ( hasil ) # grafik nd = 1000 xp = np . linspace ( a , b , nd ) plt . plot ( xp , func ( xp )) plt . show () Output Code \u00b6 1.3477932097704495 Referensi: https://www.studiobelajar.com/integral/ https://slideplayer.info/slide/2751573/","title":"Home"},{"location":"#integrasi_numerik","text":"","title":"Integrasi Numerik"},{"location":"#pengertian","text":"Integrasi Numerik merupakan Integral suatu fungsi dimana operator matematikanya dipresentasikan dalam bentuk sebagai berikut: i=\\int ^{b}_{a}f\\left( x\\right) dx Dimana i merupakan Integral suatu fungsi f (x) terhadap variabel x dengan batas-batas integrasi dari x = a sampai x = b. Integral adalah operasi matematika berupa kebalikan/invers dari operasi turunan dan limit dari jumlah atau suatu luas daerah tertentu. Integra dikategorikan menjadi 2 macam. Yaitu integral tak tentu dan integral tentu.","title":"Pengertian"},{"location":"#integral_tak_tentu","text":"Integral tak tentu adalah invers/kebalikan dari turunan atau biasa disebut anti turunan. Hasil integral tak tentu ini berupa fungsi baru yang belum mempunyai nilai tentu atau pasti, karena masih terdapat variabel dalam fungsi baru tersebut. \\int xdx=\\dfrac{x^{2}}{2}+c","title":"Integral Tak Tentu"},{"location":"#integral_tentu","text":"Disebut integral tentu jika limit dari jumlah atau suatu luas daerah dilingkupi oleh kurva suatu persamaan tertentu. Integral tentu memiliki nilai tetap atau pasti, karena batas yang ditentukan sudah jelas. \\int ^{1}_{0}xdx= \\dfrac{x^{2}}{2}| _{0}^{1}=\\dfrac{1}{2}","title":"Integral Tentu"},{"location":"#metode_trapezoid","text":"Dalam metode trapezoid terdapat aturan trapezoid yang merupakan suatu metode pendekatan integrasi numerik dengan polinomial orde satu. Dalam metode ini, kurva melengkung dibuat mendekati dengan garis lurus sedemikian hingga, bentuk dibawah kurvanya menjadi seperti trapesium. \\int ^{b}_{a}f\\left( x\\right) dx\\approx \\int ^{b}_{a}\\left( a_{0}+a_{1}x\\right) dx","title":"Metode Trapezoid"},{"location":"#algoritma_trapezoid","text":"Definisikan nilai y = f(x) Menentukan batas bawahnya (x0) dan batas atasnya (xn). Tentukan jumlah pembagi (n) Hitung h = (xn - x0) / n Hitung integrasi = f(x0) + f(xn) for i=1 : n Hitung k = x0 + i*h Hitung integrasi = integrasi + 2 * f(k)","title":"Algoritma Trapezoid"},{"location":"#implementasi_python","text":"Trapezoid Code import numpy as np import matplotlib.pyplot as plt def func ( x ): return ( x ** 2 ) * np . exp ( - x ) a = 2.0 b = 10.0 n = 30 dx = ( b - a ) / ( n - 1 ) x = np . linspace ( a , b , n ) sum = 0.0 for i in range ( 1 , n - 1 ): sum += func ( x [ i ]) hasil = 0.5 * dx * ( func ( x [ 0 ]) + 2.0 * sum + func ( x [ - 1 ])) print ( hasil ) # grafik nd = 1000 xp = np . linspace ( a , b , nd ) plt . plot ( xp , func ( xp )) plt . show ()","title":"Implementasi Python"},{"location":"#output_code","text":"1.3477932097704495 Referensi: https://www.studiobelajar.com/integral/ https://slideplayer.info/slide/2751573/","title":"Output Code"},{"location":"license/","text":"License \u00b6 MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY Support Author \u00b6 Amazon wish list","title":"License"},{"location":"license/#license","text":"MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"license/#support_author","text":"Amazon wish list","title":"Support Author"},{"location":"material-for-mkdocs/","text":"Material for MkDocs \u00b6 MkDocs \u00b6 mkdocs/mkdocs: Project documentation with Markdown - GitHub Material for MkDocs \u00b6 squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Material for MkDocs"},{"location":"material-for-mkdocs/#material_for_mkdocs","text":"","title":"Material for MkDocs"},{"location":"material-for-mkdocs/#mkdocs","text":"mkdocs/mkdocs: Project documentation with Markdown - GitHub","title":"MkDocs"},{"location":"material-for-mkdocs/#material_for_mkdocs_1","text":"squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Material for MkDocs"},{"location":"differential/differential/","text":"Differential Equation \u00b6 Pengertian \u00b6 Persamaan diferensial atau differential equation adalah persamaan yang menghubungkan satu atau lebih fungsi dan turunannya. Dalam aplikasi, fungsi umumnya mewakili kuantitas fisik, turunannya mewakili laju perubahannya, dan persamaan diferensial mendefinisikan hubungan antara keduanya. Eliminasi Gauss \u00b6 Metode Euler adalah metode orde pertama, yang berarti bahwa kesalahan lokal (kesalahan per langkah) sebanding dengan kuadrat ukuran langkah, dan kesalahan global (kesalahan pada waktu tertentu) sebanding dengan ukuran langkah. Rumus Euler Eksplisit: S(t_{j}+1)=S(t_{j})+(t-{j}+1\u2212t_{j})\\dfrac{dS(t_{j})}{dt}, Algoritma Eliminasi Gauss \u00b6 Simpan S0=S(t0)S0=S(t0) dalam sebuah array, SS. Hitung S(t1)=S0+hF(t0,S0)S(t1)=S0+hF(t0,S0). Simpan S1=S(t1)S1=S(t1) di SS. Hitung S(t2)=S1+hF(t1,S1)S(t2)=S1+hF(t1,S1). Simpan S2=S(t1)S2=S(t1) di SS. \u22ef\u22ef Hitung S(tf)=Sf\u22121+hF(tf\u22121,Sf\u22121)S(tf)=Sf\u22121+hF(tf\u22121,Sf\u22121). Simpan Sf=S(tf)Sf=S(tf) di SS. SS adalah aproksimasi solusi untuk masalah nilai awal. Implementasi Python \u00b6 Gauss Elimination Code import numpy as np import matplotlib.pyplot as plt plt . style . use ( 'seaborn-poster' ) % matplotlib inline # Define parameters f = lambda t , s : np . exp ( - t ) # ODE h = 0.1 # Step size t = np . arange ( 0 , 1 + h , h ) # Numerical grid s0 = - 1 # Initial Condition # Explicit Euler Method s = np . zeros ( len ( t )) s [ 0 ] = s0 for i in range ( 0 , len ( t ) - 1 ): s [ i + 1 ] = s [ i ] + h * f ( t [ i ], s [ i ]) plt . figure ( figsize = ( 12 , 8 )) plt . plot ( t , s , 'bo--' , label = 'Approximate' ) plt . plot ( t , - np . exp ( - t ), 'g' , label = 'Exact' ) plt . title ( 'Approximate and Exact Solution \\ for Simple ODE' ) plt . xlabel ( 't' ) plt . ylabel ( 'f(t)' ) plt . grid () plt . legend ( loc = 'lower right' ) plt . show () Output Code \u00b6 Referensi: https://en.wikipedia.org/wiki/Euler_method#:~:text=The%20Euler%20method%20is%20a,proportional%20to%20the%20step%20size. https://pythonnumericalmethods.berkeley.edu/notebooks/chapter22.03-The-Euler-Method.html","title":"Differential Equation"},{"location":"differential/differential/#differential_equation","text":"","title":"Differential Equation"},{"location":"differential/differential/#pengertian","text":"Persamaan diferensial atau differential equation adalah persamaan yang menghubungkan satu atau lebih fungsi dan turunannya. Dalam aplikasi, fungsi umumnya mewakili kuantitas fisik, turunannya mewakili laju perubahannya, dan persamaan diferensial mendefinisikan hubungan antara keduanya.","title":"Pengertian"},{"location":"differential/differential/#eliminasi_gauss","text":"Metode Euler adalah metode orde pertama, yang berarti bahwa kesalahan lokal (kesalahan per langkah) sebanding dengan kuadrat ukuran langkah, dan kesalahan global (kesalahan pada waktu tertentu) sebanding dengan ukuran langkah. Rumus Euler Eksplisit: S(t_{j}+1)=S(t_{j})+(t-{j}+1\u2212t_{j})\\dfrac{dS(t_{j})}{dt},","title":"Eliminasi Gauss"},{"location":"differential/differential/#algoritma_eliminasi_gauss","text":"Simpan S0=S(t0)S0=S(t0) dalam sebuah array, SS. Hitung S(t1)=S0+hF(t0,S0)S(t1)=S0+hF(t0,S0). Simpan S1=S(t1)S1=S(t1) di SS. Hitung S(t2)=S1+hF(t1,S1)S(t2)=S1+hF(t1,S1). Simpan S2=S(t1)S2=S(t1) di SS. \u22ef\u22ef Hitung S(tf)=Sf\u22121+hF(tf\u22121,Sf\u22121)S(tf)=Sf\u22121+hF(tf\u22121,Sf\u22121). Simpan Sf=S(tf)Sf=S(tf) di SS. SS adalah aproksimasi solusi untuk masalah nilai awal.","title":"Algoritma Eliminasi Gauss"},{"location":"differential/differential/#implementasi_python","text":"Gauss Elimination Code import numpy as np import matplotlib.pyplot as plt plt . style . use ( 'seaborn-poster' ) % matplotlib inline # Define parameters f = lambda t , s : np . exp ( - t ) # ODE h = 0.1 # Step size t = np . arange ( 0 , 1 + h , h ) # Numerical grid s0 = - 1 # Initial Condition # Explicit Euler Method s = np . zeros ( len ( t )) s [ 0 ] = s0 for i in range ( 0 , len ( t ) - 1 ): s [ i + 1 ] = s [ i ] + h * f ( t [ i ], s [ i ]) plt . figure ( figsize = ( 12 , 8 )) plt . plot ( t , s , 'bo--' , label = 'Approximate' ) plt . plot ( t , - np . exp ( - t ), 'g' , label = 'Exact' ) plt . title ( 'Approximate and Exact Solution \\ for Simple ODE' ) plt . xlabel ( 't' ) plt . ylabel ( 'f(t)' ) plt . grid () plt . legend ( loc = 'lower right' ) plt . show ()","title":"Implementasi Python"},{"location":"differential/differential/#output_code","text":"Referensi: https://en.wikipedia.org/wiki/Euler_method#:~:text=The%20Euler%20method%20is%20a,proportional%20to%20the%20step%20size. https://pythonnumericalmethods.berkeley.edu/notebooks/chapter22.03-The-Euler-Method.html","title":"Output Code"},{"location":"extensions/code-hilite/","text":"CodeHilite \u00b6 CodeHilite - Material for MkDocs Supported languages - Pygments Configure mkdocs.yml \u00b6 markdown_extensions: - codehilite","title":"Code Hilite"},{"location":"extensions/code-hilite/#codehilite","text":"CodeHilite - Material for MkDocs Supported languages - Pygments","title":"CodeHilite"},{"location":"extensions/code-hilite/#configure_mkdocsyml","text":"markdown_extensions: - codehilite","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/","text":"Footnote \u00b6 Footnotes - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - footnotes Example \u00b6 Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Footnote"},{"location":"extensions/footnote/#footnote","text":"Footnotes - Material for MkDocs","title":"Footnote"},{"location":"extensions/footnote/#configure_mkdocsyml","text":"markdown_extensions: - footnotes","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/#example","text":"Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Example"},{"location":"extensions/mathjax/","text":"MathJax \u00b6 PyMdown - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions: - mdx_math: enable_dollar_delimiter: True Example code \u00b6 $$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$ Example rendering \u00b6 P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"MathJax"},{"location":"extensions/mathjax/#mathjax","text":"PyMdown - Material for MkDocs","title":"MathJax"},{"location":"extensions/mathjax/#configure_mkdocsyml","text":"markdown_extensions: - mdx_math: enable_dollar_delimiter: True","title":"Configure mkdocs.yml"},{"location":"extensions/mathjax/#example_code","text":"$$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$","title":"Example code"},{"location":"extensions/mathjax/#example_rendering","text":"P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"Example rendering"},{"location":"getting-started/docker/","text":"Start with Docker \u00b6 Public docker image \u00b6 Package mkdocs-material - GitHub peaceiris/mkdocs-material - Docker Hub docker-compose \u00b6 Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"Docker"},{"location":"getting-started/docker/#start_with_docker","text":"","title":"Start with Docker"},{"location":"getting-started/docker/#public_docker_image","text":"Package mkdocs-material - GitHub peaceiris/mkdocs-material - Docker Hub","title":"Public docker image"},{"location":"getting-started/docker/#docker-compose","text":"Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"docker-compose"},{"location":"getting-started/download-boilerplate/","text":"Download boilerplate \u00b6 Git clone \u00b6 git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate Download zip \u00b6 wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/master.zip' unzip master.zip cd mkdocs-material-boilerplate-master \ud83d\udc49 Click me to download zip","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#download_boilerplate","text":"","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#git_clone","text":"git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate","title":"Git clone"},{"location":"getting-started/download-boilerplate/#download_zip","text":"wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/master.zip' unzip master.zip cd mkdocs-material-boilerplate-master \ud83d\udc49 Click me to download zip","title":"Download zip"},{"location":"getting-started/invoke/","text":"Serve and open with invoke \u00b6 invoke \u00b6 Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution. Serve and open \u00b6 Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml Show all tasks \u00b6 $ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"invoke"},{"location":"getting-started/invoke/#serve_and_open_with_invoke","text":"","title":"Serve and open with invoke"},{"location":"getting-started/invoke/#invoke","text":"Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution.","title":"invoke"},{"location":"getting-started/invoke/#serve_and_open","text":"Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml","title":"Serve and open"},{"location":"getting-started/invoke/#show_all_tasks","text":"$ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"Show all tasks"},{"location":"getting-started/pip/","text":"Start with pip (Anaconda, Miniconda) \u00b6 pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"pip"},{"location":"getting-started/pip/#start_with_pip_anaconda_miniconda","text":"pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"Start with pip (Anaconda, Miniconda)"},{"location":"getting-started/pipenv/","text":"Start with pipenv \u00b6 pipenv \u00b6 Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans. Install all packages \u00b6 pipenv sync --dev # Installs all packages specified in Pipfile.lock. Run MkDocs \u00b6 pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve pipenv run \u00b6 pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"pipenv"},{"location":"getting-started/pipenv/#start_with_pipenv","text":"","title":"Start with pipenv"},{"location":"getting-started/pipenv/#pipenv","text":"Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans.","title":"pipenv"},{"location":"getting-started/pipenv/#install_all_packages","text":"pipenv sync --dev # Installs all packages specified in Pipfile.lock.","title":"Install all packages"},{"location":"getting-started/pipenv/#run_mkdocs","text":"pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve","title":"Run MkDocs"},{"location":"getting-started/pipenv/#pipenv_run","text":"pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"pipenv run"},{"location":"liner%20agrebaic/linear-algebra/","text":"Linear Algebraic \u00b6 Pengertian \u00b6 Aljabar linier atau linear algebra adalah cabang matematika yang berhubungan dengan ruang vektor dan sering kali berdimensi terbatas atau dapat dihitung, dan terdapat pemetaan linier di antara ruang-ruang tersebut. Beberapa permasalahan dalam perhitungan membutuhkan penyelesaian lebih dari satu persamaan linier, sehingga diperlukan sistem persamaan linier. Dalam menyelesaikan suatu persamaan linear terdapat beragam cara yang dapat dilakukan, diantaranya yaitu dengan eliminasi gauss. Eliminasi Gauss \u00b6 Metode Eliminasi Gauss ini ditemukan oleh Carl Friedrich Gauss, metode ini dilakukan mengoperasikan nilai-nilai di dalam matriks sehingga menjadi matriks yang lebih sederhana. Cara kerja metode ini untuk menyelesaikan suatu sistem persamaan linear yaitu dengan memasukkan persamaan linear dengan menggunakan matriks. Caranya yaitu dengan mengubah persamaan linear tersebut menjadi sebuah matriks yang teraugmentasi dan mengoperasikannya sehingga menjadi matriks yang eselon baris. Kemudian setelah menjadi matriks eselon baris, kita dapat mencari nilai variabel - variabel tersebut dengan cara mensubtitusikannya. Sehingga didapatkan matriks sebagai berikut: \\begin{bmatrix} a_{11} & a_{12} & \\ldots & a_{n} \\\\ 0 & a_{22} & \\ldots & a_{2n} \\\\ 0 & 0 & \\ldots & a_{mn} \\end{bmatrix} Algoritma Eliminasi Gauss \u00b6 Mengimpor NumPy library Membaca jumlah yang tidak diketahui (n) Membuat array NumPy dengan ukuran n x n+1 dan menginisialisasi ke nol untuk menyimpan matriks yang diperbesar Membuat array numpy dengan ukuran n dan menginisialisasi ke nol untuk menyimpan vektor hasil Membaca koefisien matriks yang diperbesar Menerapkan Eliminasi Gauss Substitusi Kembali Menampilkan hasil Implementasi Python \u00b6 Gauss Elimination Code import numpy as np import sys n = int ( 10 ) a = np . array ([[ 10 , - 1 , 2 , 0 , - 1 , 11 , - 1 , 3 , 1 , 8 , 9 , 10 ], [ - 1 , 11 , - 1 , 3 , 10 , - 1 , 2 , 0 , - 1 , 8 , 11 ], [ 2 , - 1 , 10 , - 1 , - 1 , 8 , - 1 , 11 , - 1 , 6 , 12 ], [ 0 , 3 , - 1 , 8 , - 1 , 11 , - 1 , 3 , 8 , 9 , 7 , 13 ], [ 4 , 1 , 2 , - 1 , 11 , - 1 , 3 , 5 , 2 , 12 , 5 , 14 ], [ 3 , 6 , - 1 , 2 , 8 , - 1 , 11 , - 1 , 3 , 10 , 2 , 15 ], [ 2 , - 1 , 5 , - 3 , - 1 , 11 , - 1 , 3 , 5 , 2 , 8 , 16 ], [ 4 , 1 , - 3 , - 8 , 10 , - 1 , - 1 , 8 , - 1 , 9 , 7 , 17 ], [ 8 , - 5 , 6 , 7 , - 1 , 2 , 0 , - 1 , 11 , 5 , 6 , 18 ], [ 3 , 4 , - 3 , 15 , 4 , 1 , 2 , - 1 , 11 , 20 , 1 , 19 ]]) x = np . zeros ( 10 ) for i in range ( n ): if a [ i ][ i ] == 0.0 : sys . exit ( 'Divide by zero detected!' ) for j in range ( i + 1 , n ): ratio = a [ j ][ i ] / a [ i ][ i ] for k in range ( n + 1 ): a [ j ][ k ] = a [ j ][ k ] - ratio * a [ i ][ k ] x [ n - 1 ] = a [ n - 1 ][ n ] / a [ n - 1 ][ n - 1 ] for i in range ( n - 2 , - 1 , - 1 ): x [ i ] = a [ i ][ n ] for j in range ( i + 1 , n ): x [ i ] = x [ i ] - a [ i ][ j ] * x [ j ] x [ i ] = x [ i ] / a [ i ][ i ] print ( ' \\n Required solution is: ' ) for i in range ( n ): print ( 'X %d = %0.2f ' % ( i , x [ i ]), end = ' \\t ' ) Output Code \u00b6 a = np.array([[ 10, -1, 2, 0, -1, 11, -1, 3, 1, 8, 9, 10], Required solution is: X0 = 1.06 X1 = 1.60 X2 = 0.52 X3 = 0.05 X4 = 0.16 X5 = 0.03 X6 = -0.55 X7 = 0.91 X8 = 0.56 X9 = -0.63 Referensi: https://ameliadyn27.blogspot.com/2018/04/metode-eliminasi-gauss-gauss-jordan_20.html https://rifqimulyawan.com/blog/pengertian-linear-algebra/","title":"Linear Algebraic"},{"location":"liner%20agrebaic/linear-algebra/#linear_algebraic","text":"","title":"Linear Algebraic"},{"location":"liner%20agrebaic/linear-algebra/#pengertian","text":"Aljabar linier atau linear algebra adalah cabang matematika yang berhubungan dengan ruang vektor dan sering kali berdimensi terbatas atau dapat dihitung, dan terdapat pemetaan linier di antara ruang-ruang tersebut. Beberapa permasalahan dalam perhitungan membutuhkan penyelesaian lebih dari satu persamaan linier, sehingga diperlukan sistem persamaan linier. Dalam menyelesaikan suatu persamaan linear terdapat beragam cara yang dapat dilakukan, diantaranya yaitu dengan eliminasi gauss.","title":"Pengertian"},{"location":"liner%20agrebaic/linear-algebra/#eliminasi_gauss","text":"Metode Eliminasi Gauss ini ditemukan oleh Carl Friedrich Gauss, metode ini dilakukan mengoperasikan nilai-nilai di dalam matriks sehingga menjadi matriks yang lebih sederhana. Cara kerja metode ini untuk menyelesaikan suatu sistem persamaan linear yaitu dengan memasukkan persamaan linear dengan menggunakan matriks. Caranya yaitu dengan mengubah persamaan linear tersebut menjadi sebuah matriks yang teraugmentasi dan mengoperasikannya sehingga menjadi matriks yang eselon baris. Kemudian setelah menjadi matriks eselon baris, kita dapat mencari nilai variabel - variabel tersebut dengan cara mensubtitusikannya. Sehingga didapatkan matriks sebagai berikut: \\begin{bmatrix} a_{11} & a_{12} & \\ldots & a_{n} \\\\ 0 & a_{22} & \\ldots & a_{2n} \\\\ 0 & 0 & \\ldots & a_{mn} \\end{bmatrix}","title":"Eliminasi Gauss"},{"location":"liner%20agrebaic/linear-algebra/#algoritma_eliminasi_gauss","text":"Mengimpor NumPy library Membaca jumlah yang tidak diketahui (n) Membuat array NumPy dengan ukuran n x n+1 dan menginisialisasi ke nol untuk menyimpan matriks yang diperbesar Membuat array numpy dengan ukuran n dan menginisialisasi ke nol untuk menyimpan vektor hasil Membaca koefisien matriks yang diperbesar Menerapkan Eliminasi Gauss Substitusi Kembali Menampilkan hasil","title":"Algoritma Eliminasi Gauss"},{"location":"liner%20agrebaic/linear-algebra/#implementasi_python","text":"Gauss Elimination Code import numpy as np import sys n = int ( 10 ) a = np . array ([[ 10 , - 1 , 2 , 0 , - 1 , 11 , - 1 , 3 , 1 , 8 , 9 , 10 ], [ - 1 , 11 , - 1 , 3 , 10 , - 1 , 2 , 0 , - 1 , 8 , 11 ], [ 2 , - 1 , 10 , - 1 , - 1 , 8 , - 1 , 11 , - 1 , 6 , 12 ], [ 0 , 3 , - 1 , 8 , - 1 , 11 , - 1 , 3 , 8 , 9 , 7 , 13 ], [ 4 , 1 , 2 , - 1 , 11 , - 1 , 3 , 5 , 2 , 12 , 5 , 14 ], [ 3 , 6 , - 1 , 2 , 8 , - 1 , 11 , - 1 , 3 , 10 , 2 , 15 ], [ 2 , - 1 , 5 , - 3 , - 1 , 11 , - 1 , 3 , 5 , 2 , 8 , 16 ], [ 4 , 1 , - 3 , - 8 , 10 , - 1 , - 1 , 8 , - 1 , 9 , 7 , 17 ], [ 8 , - 5 , 6 , 7 , - 1 , 2 , 0 , - 1 , 11 , 5 , 6 , 18 ], [ 3 , 4 , - 3 , 15 , 4 , 1 , 2 , - 1 , 11 , 20 , 1 , 19 ]]) x = np . zeros ( 10 ) for i in range ( n ): if a [ i ][ i ] == 0.0 : sys . exit ( 'Divide by zero detected!' ) for j in range ( i + 1 , n ): ratio = a [ j ][ i ] / a [ i ][ i ] for k in range ( n + 1 ): a [ j ][ k ] = a [ j ][ k ] - ratio * a [ i ][ k ] x [ n - 1 ] = a [ n - 1 ][ n ] / a [ n - 1 ][ n - 1 ] for i in range ( n - 2 , - 1 , - 1 ): x [ i ] = a [ i ][ n ] for j in range ( i + 1 , n ): x [ i ] = x [ i ] - a [ i ][ j ] * x [ j ] x [ i ] = x [ i ] / a [ i ][ i ] print ( ' \\n Required solution is: ' ) for i in range ( n ): print ( 'X %d = %0.2f ' % ( i , x [ i ]), end = ' \\t ' )","title":"Implementasi Python"},{"location":"liner%20agrebaic/linear-algebra/#output_code","text":"a = np.array([[ 10, -1, 2, 0, -1, 11, -1, 3, 1, 8, 9, 10], Required solution is: X0 = 1.06 X1 = 1.60 X2 = 0.52 X3 = 0.05 X4 = 0.16 X5 = 0.03 X6 = -0.55 X7 = 0.91 X8 = 0.56 X9 = -0.63 Referensi: https://ameliadyn27.blogspot.com/2018/04/metode-eliminasi-gauss-gauss-jordan_20.html https://rifqimulyawan.com/blog/pengertian-linear-algebra/","title":"Output Code"},{"location":"profil/profil/","text":"Nama : Fatin Zahidah Mas'ud NIM : 190411100129 Mata Kuliah : Komputasi Numerik A","title":"Profil"}]}